// <auto-generated />
using EasyStore.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyStore.Persistence.Migrations
{
    [DbContext(typeof(EasyStoreDbContext))]
    partial class EasyStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyStore.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Phone");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EasyStore.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EasyStore.Domain.Entities.OrderedItem", b =>
                {
                    b.Property<int>("OrderedItemId");

                    b.Property<int>("ProductId");

                    b.Property<float>("Discount");

                    b.Property<int>("OrderId");

                    b.Property<short>("Quantity");

                    b.HasKey("OrderedItemId", "ProductId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderedItems");
                });

            modelBuilder.Entity("EasyStore.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductDescription");

                    b.Property<string>("ProductName");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EasyStore.Domain.Entities.Customer", b =>
                {
                    b.OwnsOne("EasyStore.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address_1")
                                .HasColumnName("CustomerAddress_1");

                            b1.Property<string>("Address_2")
                                .HasColumnName("CustomerAddress_2");

                            b1.Property<string>("City")
                                .HasColumnName("CustomerCity");

                            b1.Property<string>("Country")
                                .HasColumnName("CustomerCountry");

                            b1.Property<string>("ZipCode")
                                .HasColumnName("CustomerZipCode");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.HasOne("EasyStore.Domain.Entities.Customer")
                                .WithOne("Address")
                                .HasForeignKey("EasyStore.Domain.ValueObjects.Address", "CustomerId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("EasyStore.Domain.ValueObjects.Email", "EmailAddress", b2 =>
                                {
                                    b2.Property<int>("AddressCustomerId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Value")
                                        .HasColumnName("CustomerEmail");

                                    b2.HasKey("AddressCustomerId");

                                    b2.ToTable("Customers");

                                    b2.HasOne("EasyStore.Domain.ValueObjects.Address")
                                        .WithOne("EmailAddress")
                                        .HasForeignKey("EasyStore.Domain.ValueObjects.Email", "AddressCustomerId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("EasyStore.Domain.Entities.Order", b =>
                {
                    b.HasOne("EasyStore.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Orders_Customers")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("EasyStore.Domain.ValueObjects.Address", "Billings", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address_1")
                                .HasColumnName("BillingAddress_1");

                            b1.Property<string>("Address_2")
                                .HasColumnName("BillingAddress_2");

                            b1.Property<string>("City")
                                .HasColumnName("BillingCity");

                            b1.Property<string>("Country")
                                .HasColumnName("BillingCountry");

                            b1.Property<string>("ZipCode")
                                .HasColumnName("BillingZipCode");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.HasOne("EasyStore.Domain.Entities.Order")
                                .WithOne("Billings")
                                .HasForeignKey("EasyStore.Domain.ValueObjects.Address", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("EasyStore.Domain.ValueObjects.Email", "EmailAddress", b2 =>
                                {
                                    b2.Property<int>("AddressOrderId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Value")
                                        .HasColumnName("BillingEmail");

                                    b2.HasKey("AddressOrderId");

                                    b2.ToTable("Orders");

                                    b2.HasOne("EasyStore.Domain.ValueObjects.Address")
                                        .WithOne("EmailAddress")
                                        .HasForeignKey("EasyStore.Domain.ValueObjects.Email", "AddressOrderId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });

                    b.OwnsOne("EasyStore.Domain.ValueObjects.Address", "Shippings", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address_1")
                                .HasColumnName("ShippingAddress_1");

                            b1.Property<string>("Address_2")
                                .HasColumnName("ShippingAddress_2");

                            b1.Property<string>("City")
                                .HasColumnName("ShippingCity");

                            b1.Property<string>("Country")
                                .HasColumnName("ShippingCountry");

                            b1.Property<string>("ZipCode")
                                .HasColumnName("ShippingZipCode");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.HasOne("EasyStore.Domain.Entities.Order")
                                .WithOne("Shippings")
                                .HasForeignKey("EasyStore.Domain.ValueObjects.Address", "OrderId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("EasyStore.Domain.ValueObjects.Email", "EmailAddress", b2 =>
                                {
                                    b2.Property<int>("AddressOrderId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("Value")
                                        .HasColumnName("ShippingEmail");

                                    b2.HasKey("AddressOrderId");

                                    b2.ToTable("Orders");

                                    b2.HasOne("EasyStore.Domain.ValueObjects.Address")
                                        .WithOne("EmailAddress")
                                        .HasForeignKey("EasyStore.Domain.ValueObjects.Email", "AddressOrderId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("EasyStore.Domain.Entities.OrderedItem", b =>
                {
                    b.HasOne("EasyStore.Domain.Entities.Order", "Order")
                        .WithMany("OrderedItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderedItems_Orders");

                    b.HasOne("EasyStore.Domain.Entities.Product", "Product")
                        .WithMany("OrderedItems")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_OrderedItems_Products");

                    b.OwnsOne("EasyStore.Domain.ValueObjects.Money", "Price", b1 =>
                        {
                            b1.Property<int>("OrderedItemId");

                            b1.Property<int>("OrderedItemProductId");

                            b1.Property<decimal>("Value")
                                .HasColumnName("Price");

                            b1.HasKey("OrderedItemId", "OrderedItemProductId");

                            b1.ToTable("OrderedItems");

                            b1.HasOne("EasyStore.Domain.Entities.OrderedItem")
                                .WithOne("Price")
                                .HasForeignKey("EasyStore.Domain.ValueObjects.Money", "OrderedItemId", "OrderedItemProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("EasyStore.Domain.Entities.Product", b =>
                {
                    b.OwnsOne("EasyStore.Domain.ValueObjects.Money", "Price", b1 =>
                        {
                            b1.Property<int>("ProductId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Value")
                                .HasColumnName("Price");

                            b1.HasKey("ProductId");

                            b1.ToTable("Products");

                            b1.HasOne("EasyStore.Domain.Entities.Product")
                                .WithOne("Price")
                                .HasForeignKey("EasyStore.Domain.ValueObjects.Money", "ProductId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
